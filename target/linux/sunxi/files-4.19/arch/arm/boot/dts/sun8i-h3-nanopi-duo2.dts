/*
 * Copyright (C) 2018 Karl Palsson <karlp@tweak.net.au>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "sun8i-h3.dtsi"
#include "sunxi-common-regulators.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "FriendlyARM NanoPi Duo2";
	compatible = "friendlyarm,nanopi-duo2", "allwinner,sun8i-h3";

        aliases {
                serial0 = &uart0;
        };

        chosen {
                stdout-path = "serial0:115200n8";
        };

        leds {
                compatible = "gpio-leds";
                /*
		pinctrl-names = "default";
                pinctrl-0 = <&leds_npi>, <&leds_r_npi>;
		*/

                status {
                        label = "nanopi:green:status";
                        gpios = <&pio 0 10 GPIO_ACTIVE_HIGH>;
                        linux,default-trigger = "heartbeat";
                };

                pwr {
                        label = "nanopi:red:pwr";
                        gpios = <&r_pio 0 10 GPIO_ACTIVE_HIGH>;
                        default-state = "on";
                };
        };

/* doesn't work, pin is right from schematic, but.... ?
        r_gpio_keys {
                compatible = "gpio-keys";
                input-name = "k1";
                pinctrl-names = "default";
                pinctrl-0 = <&sw_r_npi>;

                k1 {
                        label = "k1";
                        linux,code = <KEY_POWER>;
                        gpios = <&r_pio 0 3 GPIO_ACTIVE_LOW>;
                };
        };
*/

	/* FIXME - include regulator here for 1.1v/1.3V switch */

        wifi_pwrseq: wifi_pwrseq {
                compatible = "mmc-pwrseq-simple";
                /* pinctrl-names = "default"; */
                reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
        };

};

&usb_otg {
	status = "okay";
	dr_mode = "peripheral";
};

&usbphy {
	usb0_id_det-gpios = <&pio 6 12 GPIO_ACTIVE_HIGH>; /* PG12 */
};

&mmc0 {
        bus-width = <4>;
        cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>;
        status = "okay";
        vmmc-supply = <&reg_vcc3v3>;
};

&mmc1 {
        vmmc-supply = <&reg_vcc3v3>;
        vqmmc-supply = <&reg_vcc3v3>;
        mmc-pwrseq = <&wifi_pwrseq>;
        bus-width = <4>;
        non-removable;
        status = "okay";

        sdio_wifi: sdio_wifi@1 {
                reg = <1>;
                compatible = "brcm,bcm4329-fmac";
                interrupt-parent = <&pio>;
                interrupts = <6 10 IRQ_TYPE_LEVEL_LOW>; /* PG10 / EINT10 */
                interrupt-names = "host-wake";
        };
};

/* doesn't seem necessary? 
&pio {
        leds_npi: led_pins {
                pins = "PA10";
                function = "gpio_out";
        };
};

&r_pio {
        leds_r_npi: led_pins {
                pins = "PL10";
                function = "gpio_out";
        };

        sw_r_npi: key_pins {
                pins = "PL3";
                function = "gpio_in";
        };
};
*/

&uart0 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart0_pins_a>;
        status = "okay";
};

